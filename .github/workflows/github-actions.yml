# github repository actions 페이지에 나타날 이름
name: CI/CD using github actions & docker
# event trigger
# main 브랜치에 push가 되었을 때 실행
on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      # github 가상환경에서 작업할 수 있도록 repository 코드 복제
      - uses: actions/checkout@v3

      # make docker production envFile
      - name: Create Production envFile
        if: contains(github.ref, 'main')
        run: |
          touch ./.env.production
          echo "${{ secrets.ENV_PRODUCTION }}" > ./.env.production
          cat ./.env.production

      # docker build & push to production
      - name: Docker build & push to prodction
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD}}
          docker build --build-arg NEXT_PUBLIC_REST_API_KEY=${{ secrets.REST_API_KEY }} --build-arg NEXT_PUBLIC_REDIRECT_URI=${{ secrets.REST_REDIRECT_URI }} --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME}}/myeonjeobeottae .
          docker push ${{ secrets.DOCKER_USERNAME}}/myeonjeobeottae

      # deploy to production
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.EC2_HOST}}
          username: ${{ secrets.EC2_USERNAME}}
          key: ${{ secrets.EC2_KEY}}
          envs: GITHUB_SHA
          script: |
            sudo su
            docker-compose down
            docker-compose up -d --build
            docker system prune -f
